# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class OrderResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, client_id: str = None, product_id: str = None, price: float = None):  # noqa: E501
        """OrderResponse - a model defined in Swagger

        :param client_id: The client_id of this OrderResponse.  # noqa: E501
        :type client_id: str
        :param product_id: The product_id of this OrderResponse.  # noqa: E501
        :type product_id: str
        :param price: The price of this OrderResponse.  # noqa: E501
        :type price: float
        """
        self.swagger_types = {
            'client_id': str,
            'product_id': str,
            'price': float
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'product_id': 'productId',
            'price': 'price'
        }
        self._client_id = client_id
        self._product_id = product_id
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> 'OrderResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OrderResponse of this OrderResponse.  # noqa: E501
        :rtype: OrderResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self) -> str:
        """Gets the client_id of this OrderResponse.

        Client Identifier  # noqa: E501

        :return: The client_id of this OrderResponse.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id: str):
        """Sets the client_id of this OrderResponse.

        Client Identifier  # noqa: E501

        :param client_id: The client_id of this OrderResponse.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def product_id(self) -> str:
        """Gets the product_id of this OrderResponse.

        Product Identifier  # noqa: E501

        :return: The product_id of this OrderResponse.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: str):
        """Sets the product_id of this OrderResponse.

        Product Identifier  # noqa: E501

        :param product_id: The product_id of this OrderResponse.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def price(self) -> float:
        """Gets the price of this OrderResponse.

        Per-Unit Price (inclusive of fee for sell order)  # noqa: E501

        :return: The price of this OrderResponse.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this OrderResponse.

        Per-Unit Price (inclusive of fee for sell order)  # noqa: E501

        :param price: The price of this OrderResponse.
        :type price: float
        """

        self._price = price
